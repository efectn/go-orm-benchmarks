// Code generated by queryx, DO NOT EDIT.

package queryx

import (
	"encoding/json"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestNewString(t *testing.T) {
	s1 := NewString("ss")
	require.Equal(t, "ss", s1.Val)
	require.True(t, s1.Valid)

	s2 := NewNullableString(nil)
	require.False(t, s2.Valid)
}

func TestStringJSON(t *testing.T) {
	type Foo struct {
		X String `json:"x"`
		Y String `json:"y"`
	}
	x := NewString("ss")
	y := NewNullableString(nil)
	s := `{"x":"ss","y":null}`

	f1 := Foo{X: x, Y: y}
	b, err := json.Marshal(f1)
	require.NoError(t, err)
	require.Equal(t, s, string(b))

	var f2 Foo
	err = json.Unmarshal([]byte(s), &f2)
	require.NoError(t, err)
	require.Equal(t, x, f2.X)
	require.Equal(t, y, f2.Y)
}
