// Code generated by queryx, DO NOT EDIT.

package queryx

import (
	"encoding/json"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestNewUUID(t *testing.T) {
	u1 := NewUUID("a81e44c5-7e18-4dfe-b9b3-d9280629d2ef")
	require.Equal(t, "a81e44c5-7e18-4dfe-b9b3-d9280629d2ef", u1.Val)
	require.True(t, u1.Valid)

	u2 := NewNullableUUID(nil)
	require.False(t, u2.Valid)
}

func TestUUIDJSON(t *testing.T) {
	type Foo struct {
		X UUID `json:"x"`
		Y UUID `json:"y"`
	}
	x := NewUUID("a81e44c5-7e18-4dfe-b9b3-d9280629d2ef")
	y := NewNullableUUID(nil)
	s := `{"x":"a81e44c5-7e18-4dfe-b9b3-d9280629d2ef","y":null}`

	f1 := Foo{X: x, Y: y}
	b, err := json.Marshal(f1)
	require.NoError(t, err)
	require.Equal(t, s, string(b))

	var f2 Foo
	err = json.Unmarshal([]byte(s), &f2)
	require.NoError(t, err)
	require.Equal(t, x, f2.X)
	require.Equal(t, y, f2.Y)
}
