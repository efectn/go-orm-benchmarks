// Code generated by queryx, DO NOT EDIT.

package queryx

import "fmt"

type DeleteStatemnet struct {
	from  string
	where *Clause
}

func NewDelete() *DeleteStatemnet {
	return &DeleteStatemnet{}
}

func (s *DeleteStatemnet) From(from string) *DeleteStatemnet {
	s.from = from
	return s
}

func (s *DeleteStatemnet) Where(expr *Clause) *DeleteStatemnet {
	s.where = expr
	return s
}

func (s *DeleteStatemnet) ToSQL() (string, []interface{}) {
	sql, args := "", []interface{}{}
	sql = fmt.Sprintf("DELETE FROM %s", s.from)

	if s.where != nil {
		sql = fmt.Sprintf("%s WHERE %s", sql, s.where.fragment)
		args = append(args, s.where.args...)
	}

	return sql, args
}
