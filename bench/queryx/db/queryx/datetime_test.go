// Code generated by queryx, DO NOT EDIT.

package queryx

import (
	"encoding/json"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestNewDatetime(t *testing.T) {
	d1 := NewDatetime("2012-12-12 11:10:09")
	require.Equal(t, "2012-12-12 11:10:09", d1.Val.Format("2006-01-02 15:04:05"))
	require.True(t, d1.Valid)

	d2 := NewNullableDatetime(nil)
	require.False(t, d2.Valid)
}

func TestDatetimeJSON(t *testing.T) {
	type Foo struct {
		X Datetime `json:"x"`
		Y Datetime `json:"y"`
	}
	x := NewDatetime("2012-12-12 11:10:09")
	y := NewNullableDatetime(nil)
	s := `{"x":"2012-12-12T03:10:09Z","y":null}`

	f1 := Foo{X: x, Y: y}
	b, err := json.Marshal(f1)
	require.NoError(t, err)
	require.Equal(t, s, string(b))

	var f2 Foo
	err = json.Unmarshal([]byte(s), &f2)
	require.NoError(t, err)
	require.Equal(t, x, f2.X)
	require.Equal(t, y, f2.Y)
}
