// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: copyfrom.go

package db

import (
	"context"
)

// iteratorForInsertMulti implements pgx.CopyFromSource.
type iteratorForInsertMulti struct {
	rows                 []InsertMultiParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertMulti) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertMulti) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Name,
		r.rows[0].Title,
		r.rows[0].Fax,
		r.rows[0].Web,
		r.rows[0].Age,
		r.rows[0].Right,
		r.rows[0].Counter,
	}, nil
}

func (r iteratorForInsertMulti) Err() error {
	return nil
}

func (q *Queries) InsertMulti(ctx context.Context, arg []InsertMultiParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"models"}, []string{"name", "title", "fax", "web", "age", "right", "counter"}, &iteratorForInsertMulti{rows: arg})
}
